# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'readme.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_DecFuzzer(object):
    def setupUi(self, DecFuzzer):
        DecFuzzer.setObjectName("DecFuzzer")
        DecFuzzer.resize(400, 300)
        self.label = QtWidgets.QLabel(DecFuzzer)
        self.label.setGeometry(QtCore.QRect(160, 0, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(17)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.pushButton_3 = QtWidgets.QPushButton(DecFuzzer)
        self.pushButton_3.setGeometry(QtCore.QRect(110, 270, 181, 23))
        self.pushButton_3.setObjectName("pushButton_3")
        self.textBrowser = QtWidgets.QTextBrowser(DecFuzzer)
        self.textBrowser.setGeometry(QtCore.QRect(10, 30, 381, 231))
        self.textBrowser.setObjectName("textBrowser")

        self.retranslateUi(DecFuzzer)
        QtCore.QMetaObject.connectSlotsByName(DecFuzzer)

    def retranslateUi(self, DecFuzzer):
        _translate = QtCore.QCoreApplication.translate
        DecFuzzer.setWindowTitle(_translate("DecFuzzer", "Form"))
        self.label.setText(_translate("DecFuzzer", "readme"))
        self.pushButton_3.setText(_translate("DecFuzzer", "Return to main menu"))
        self.textBrowser.setHtml(_translate("DecFuzzer", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<h1 style=\" margin-top:18px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:xx-large; font-weight:600;\">How Far We Have Come: Testing Decompilation Correctness of C Decompilers ISSTA\'20 </span></h1>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">ISSTA\'20 Artifact for: <span style=\" font-family:\'Courier New\';\">How Far We Have Come: Testing Decompilation Correctness of C Decompilers</span> </p>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">0. Environment </span></h2>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Our experiment was conducted on <span style=\" font-family:\'Courier New\';\">64-bit Ubuntu 18.04</span>. We recommend to set up on the same OS system. </p>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">1. Project Structure </span></h2>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\"\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">src/</span>: source code directory</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">runtime/</span>: CSmith runtime library</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">seed_for_retdec</span> and <span style=\" font-family:\'Courier New\';\">seed_for_r2</span>: sample seeds for EMI testing (see clarifications below). </li></ul>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">2. Code Structure </span></h2>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\"\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">fuzzer.py</span>: main component to initialize a fuzzing test campaign by calling functions in this script</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">generator.py</span>: to compile and decompile files (to interact with Radare2 and IDA-Pro, we provide two scripts as follows; the other two decompilers can be used directly via command line)</li>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">R2_decompile.py</span>: to decompile with Radare2/Ghidra </li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">IDA_decompile.py</span> and <span style=\" font-family:\'Courier New\';\">idapy_decompile.py</span>: to decompile with IDA (IDA-Pro is not provided in this Artifact Evaluation Package; see clarifications below)</li></ul>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">EMI_generator.py</span>: to generate EMI variants</li>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">MySQL_connector.py</span>: to connect MySQL, which is used in the implementation of EMI mutation</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">CFG_measurer.py</span>: to measure CFG distance of two programs (used for EMI mutation)</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">ENV_Profiler.py</span>: to provide live code EMI mutation function</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">ContextTable.py</span>: context structure</li></ul>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">replacer.py</span>: to replace main() in original code with decompilation result</li>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">modifier.py</span>: to replace custom macros in decompilation results</li></ul>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">checker.py</span>: to compare the output of the two programs for consistency</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">Config.py</span>: constant values/strings/paths </li></ul>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">3. Installation of dependencies </span></h2>\n"
"<h3 style=\" margin-top:14px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:large; font-weight:600;\">3.0. Libraries and tools: </span></h3>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">sudo apt install gcc-multilib</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">sudo apt install m4</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">sudo apt install openssl libssl-dev -y</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">sudo apt install flex bison</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">sudo apt install pkg-config </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">Cmake</span> version 3.12 or later is needed to build r2ghidra-dec. To install latest version of Cmake, download source code from <a href=\"https://github.com/Kitware/CMake/releases/download/v3.16.6/cmake-3.16.6.tar.gz\"><span style=\" text-decoration: underline; color:#0000ff;\">here</span></a>, and then build it following instructions on their <a href=\"https://cmake.org/install/\"><span style=\" text-decoration: underline; color:#0000ff;\">website</span></a>: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">./bootstrap</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">make </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">sudo make install </span></p>\n"
"<h3 style=\" margin-top:14px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:large; font-weight:600;\">3.1. MySQL </span></h3>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">MySQL is used in EMI mutation. To install it on Ubuntu: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">apt-get install mysql-server </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Then start mysql service: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">service mysql start </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Remember to update </span><span style=\" font-family:\'Courier New\'; font-weight:600;\">user</span><span style=\" font-weight:600;\"> and </span><span style=\" font-family:\'Courier New\'; font-weight:600;\">passwd</span><span style=\" font-weight:600;\"> in MySQL_connector.py</span> if you set another user and password. You can check your default user and password by: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">sudo cat /etc/mysql/debian.cnf </span></p>\n"
"<h3 style=\" margin-top:14px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:large; font-weight:600;\">3.2. PyMySQL </span></h3>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">To install the MySQL Driver for Python3: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">apt-get install python3-pip</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">pip3 install PyMySQL </span></p>\n"
"<h3 style=\" margin-top:14px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:large; font-weight:600;\">3.3. Decompilers </span></h3>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">As reported in the paper, four decompilers are tested as follows: </p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\"\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">IDA Pro: <a href=\"https://www.hex-rays.com/products/ida/ \"><span style=\" text-decoration: underline; color:#0000ff;\">https://www.hex-rays.com/products/ida/</span></a></li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">JEB3: <a href=\"https://www.pnfsoftware.com/\"><span style=\" text-decoration: underline; color:#0000ff;\">https://www.pnfsoftware.com/</span></a></li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">RetDec: <a href=\"https://retdec.com/\"><span style=\" text-decoration: underline; color:#0000ff;\">https://retdec.com/</span></a></li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Radare2: <a href=\"https://www.radare.org/n/radare2.html\"><span style=\" text-decoration: underline; color:#0000ff;\">https://www.radare.org/n/radare2.html</span></a> (we tested the r2ghidra plugin of Radare2, more specifically) </li></ul>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">We note that <span style=\" font-style:italic;\">IDA Pro</span> and <span style=\" font-style:italic;\">JEB3</span> are commercial tools, and we decide to not provide them in this artifact evaluation phase. Instead, we provide instructions to setup the other two free decompilers <span style=\" font-style:italic;\">RetDec</span> and <span style=\" font-style:italic;\">Radare2</span> with <span style=\" font-style:italic;\">Ghidra</span> plugin. We assure that two commercial decompilers are tested in exactly the same way. </p>\n"
"<h4 style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:medium; font-weight:600;\">3.3.1. Radare2 and r2ghidra </span></h4>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">To install Radare2: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">git clone https://github.com/radareorg/radare2</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">cd radare2 ; sys/install.sh ; cd .. </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">We use commit 06ab29b93cb0168a8ec1cb39f860c6b990678838 when writing this README. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">To further install the Ghidra decompiler plugin (named r2ghidra): </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">r2pm update</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">r2pm -i r2ghidra-dec </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Then we need to install r2pipe to use our decompiler script <span style=\" font-style:italic;\">R2_decompile.py</span>: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">pip3 install r2pipe </span></p>\n"
"<h4 style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:medium; font-weight:600;\">3.3.2. RetDec </span></h4>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">To install RetDec, we recommend to download and unpack <a href=\"https://github.com/avast/retdec/releases\"><span style=\" text-decoration: underline; color:#0000ff;\">pre-built package</span></a> to save time, you can also build from source code following the instructions on their <a href=\"https://github.com/avast/retdec\"><span style=\" text-decoration: underline; color:#0000ff;\">github page</span></a> (note that the size of unpacked RetDec is about 5.5 GB.) </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Download and unpack the pre-built RetDec (ver. 4.0) for Ubuntu at <a href=\"https://github.com/avast/retdec/releases/download/v4.0/retdec-v4.0-ubuntu-64b.tar.xz\"><span style=\" text-decoration: underline; color:#0000ff;\">here</span></a>, then you can use <span style=\" font-family:\'Courier New\';\">retdec-decompiler.py</span> under <span style=\" font-family:\'Courier New\';\">retdec/bin/</span>. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Remember to update the absolute path to </span><span style=\" font-family:\'Courier New\'; font-weight:600;\">retdec-decompiler.py</span><span style=\" font-weight:600;\"> in </span><span style=\" font-weight:600; font-style:italic;\">Config.py</span><span style=\" font-weight:600;\">.</span> For example: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">RetDec_absolute_path = \'/home/fuzz/Documents/retdec-install/bin/retdec-decompiler.py\' </span></p>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">4. Reproducing experimental results </span></h2>\n"
"<h3 style=\" margin-top:14px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:large; font-weight:600;\">4.1. Setup </span></h3>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Clone this repository </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">git clone https://github.com/monkbai/DecFuzzer.git </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Then do not forget to <span style=\" font-weight:600;\">update the absolute path to csmith runtime </span><span style=\" font-family:\'Courier New\'; font-weight:600;\">runtime_dir</span><span style=\" font-weight:600;\"> in </span><span style=\" font-weight:600; font-style:italic;\">Config.py</span><span style=\" font-weight:600;\">.</span> For example: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">runtime_dir = \'/home/fuzz/Documents/DecFuzzer/runtime/\' </span></p>\n"
"<h3 style=\" margin-top:14px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:large; font-weight:600;\">4.2. Reproducing experimental results </span></h3>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">python3 run.py </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The script <span style=\" font-family:\'Courier New\';\">run.py</span> will run fuzzing test on <span style=\" font-style:italic;\">RetDec</span> and <span style=\" font-style:italic;\">r2ghidra</span>, separately. It will first test 1000 csmith generated programs in directory <span style=\" font-family:\'Courier New\';\">./seed_for_[retdec|r2]</span>, the result will be stored in <span style=\" font-family:\'Courier New\';\">./seed_for_[retdec|r2]/result/</span> and <span style=\" font-family:\'Courier New\';\">./seed_for_[retdec|r2]/error/</span>, the EMI variants will be stored in <span style=\" font-family:\'Courier New\';\">./seed_for_[retdec|r2]/emi/</span>. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Then it will test all generated EMI variants, the results are stored in a similar manner. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">It will take several hours to finish the whole process. While it\'s unlikely to get exactly the same number (since randomness is involved in generating EMI mutations), it should give a very close number reported in Table 3 in our paper. </p>\n"
"<h3 style=\" margin-top:14px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:large; font-weight:600;\">4.4. Access to data </span></h3>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Meanwhile, for the ease of understanding/checking our results reported in the paper, We also provide all Csmith generated programs and EMI mutations which can be used to re-produce findings in Table 3, you can download them from <a href=\"https://www.dropbox.com/sh/kqw7e19snfeukai/AADHZ45TAL9Kxi7v9nmdXfLCa?dl=0\"><span style=\" text-decoration: underline; color:#0000ff;\">here</span></a>. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Then, you can reproduce the experiment results using the \'reproduce.py` script we provided. It takes two steps: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Step 1</span> </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Put all the C source files to be tested in a directory. For instance, to test RetDec, downloading the corresponding folder from Dropbox will result into the following folder structure: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">➜  ~ tree retdec_folder</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">retdec_folder</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">├── cmisth_files</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">│   ├── error</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">│   └── result</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">└── emi_files</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">    ├── error</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">    └── result </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Our current results are put inside “error” and “result” subfolders. So before testing, consider removing those four subfolders. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Step 2</span> </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Run <span style=\" font-family:\'Courier New\';\">./reproduce.py</span> like: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">python3 ./reproduce.py --decompiler &lt;decompiler name&gt; --files_dir &lt;directory to C files&gt; </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">For instance, </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">python3 ./reproduce.py --decompiler retdec --files_dir retdec_folder/emi_files </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">And </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\"> python3 ./reproduce.py --decompiler retdec --files_dir retdec_folder/csmith_files </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Indeed, <span style=\" font-family:\'Courier New\';\">reproduce.py</span> is designed such that when users want to test our four decompilers, then can specify the <span style=\" font-family:\'Courier New\';\">--decompiler</span> parameter with: <span style=\" font-family:\'Courier New\';\">retdec</span>, <span style=\" font-family:\'Courier New\';\">r2</span>, <span style=\" font-family:\'Courier New\';\">jeb</span> or <span style=\" font-family:\'Courier New\';\">ida</span>. Also, in addition to directly taking EMI or CSmith generated C files as the inputs, <span style=\" font-family:\'Courier New\';\">reproduce.py</span> also provides another option <span style=\" font-family:\'Courier New\';\">--EMI</span> to enable the generation of new EMI variants along the testing. For example: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">python3 ./reproduce.py --decompiler r2 --files_dir ./radare2_folder/csmith_files --emi_dir ./new_seed_for_radare2/emi --EMI </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Where <span style=\" font-family:\'Courier New\';\">--emi_dir</span> accompanies <span style=\" font-family:\'Courier New\';\">--EMI</span> to specify the output directory of newly generated EMI variants. </p>\n"
"<h3 style=\" margin-top:14px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:large; font-weight:600;\">4.5. Interpret Result </span></h3>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">As noted in our paper, suppose a C file <span style=\" font-family:\'Courier New\';\">10.c</span> is to be tested, it will be compiled first: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">10.c == compile ==&gt; 10 </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Then the executable <span style=\" font-family:\'Courier New\';\">10</span> will be decompiled by corresponding decompiler: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">10 == decompile ==&gt; 10_retdec.c or 10_r2.c </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">We try to generate a new compilable file by replacing <span style=\" font-family:\'Courier New\';\">func_1</span> function in <span style=\" font-family:\'Courier New\';\">10.c</span> with code in <span style=\" font-family:\'Courier New\';\">10_retdec.c</span> or <span style=\" font-family:\'Courier New\';\">10_r2.c</span>: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New\';\">10_retdec.c or 10_r2.c == replace ==&gt; 10_new.c == recompile ==&gt; 10_new </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If recompilation is failed, the source code is stored in <span style=\" font-family:\'Courier New\';\">error</span> folder and error information is logged in <span style=\" font-family:\'Courier New\';\">error/error_log.txt</span>. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Finally, we compare the outputs of <span style=\" font-family:\'Courier New\';\">10</span> and <span style=\" font-family:\'Courier New\';\">10_new</span>, if they yield different outputs, it will be stored in <span style=\" font-family:\'Courier New\';\">result</span> and logged in <span style=\" font-family:\'Courier New\';\">result/result_log.txt</span>.</p></body></html>"))
